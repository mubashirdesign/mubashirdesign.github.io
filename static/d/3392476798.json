{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"63928ad6-25da-5b65-a07e-e545b3217287","html":"<hr>\n<h3>How do you deal with clients that can potentially open you up to connections but won't pay what it costs truly to build a site?</h3>\n<hr>\n<hr>\n<p>Unfortunately there seems to be a large misconception that building sites are fast and cheap so they come to you expecting a $200-$300 website done for them.\nThe easy way out is just to say no but then that cuts off possible opportunities that may arise from these friends/family (especially if they are well established in their career). So how do you go about capitalizing on these requests?</p>\n<hr>\n<p>Well let's just say your baseline rate for a static site is $300 because realistically once you go higher they'll run away which means you'll need to spend as little time and resources to make that $300 worth it.</p>\n<p>The usual go-to is to throw up a wordpress CMS, install a theme and have the client drop the content in it, unfortunately this has never worked out for me and the main reason is change requests such as \"can you move this here and change this color there?\" can be insanely tedious with wordpress themes that end up breaking everything.</p>\n<p>And honestly the people you deal with have no idea how to manage website content so you'll end up taking on handling the content on the site nullifying the purpose of a CMS.</p>\n<p>Once you've past the two hour mark fixing a small color issue then the project just isn't worth it anymore at that point.</p>\n<p>So what tools are our there to help you commit as less time and resources?</p>\n<p>Well first we can use ngrok to create a public url for our localhost webserver. Which means you don't need to commit paying for a hosted webserver which actually gives you some leverage in getting the client to pay when it comes time to since you can wait it out with no issue. If you end up paying for a web server you end up committing resources and if the client doesn't pay you're off to a bad start.</p>\n<p><a href=\"https://ngrok.com/\">https://ngrok.com/</a></p>\n<p>To expose your localhost to be accessible via internet. Download ngrok globally.</p>\n<p>npm install ngrok -g\nIf your on git bash, run</p>\n<p>ngrok.cmd http 8080 -host-header=\"localhost:8080\"\nelse</p>\n<p>ngrok http 8080 -host-header=\"localhost:8080\"\nNow go to localhost:4040 which will be the ngrok interface where you can get the URLs that will allow anyone to access your project.</p>\n<p>Boom that's it, now you're free at will to take it up or down based on when the client wants to see it.</p>\n<p>So now in terms of technology, it's really up to what you're comfortable with and what you're fastest with. I used to default to wordpress since that is pretty much a default go to but what I've come to realize is that I spend up way too much time handling change requests from clients so I've started using gatsby.</p>","frontmatter":{"type":"blog","title":"Dealing with website requests from small-timers","path":"/1"}}}]}}}